# version: '3'

# services:
#   db:
#     image: postgres:12-bullseye
#     environment:
#       POSTGRES_DB: db_transcendence
#       POSTGRES_USER: user_transcendence
#       POSTGRES_PASSWORD: pass_transcendence
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     networks:
#       - transcendence_app
#     restart: always

#   web:
#     build: .
#     # command: gunicorn src.wsgi:application --bind 0.0.0.0:8000
#     ports:
#       - "8000:8000"
#     volumes:
#       - .:/app
#     ulimits:
#       nproc: 65535 
#     environment:
#       - POSTGRES_DB=db_transcendence
#       - POSTGRES_USER=user_transcendence
#       - POSTGRES_PASSWORD=pass_transcendence
#       - POSTGRES_HOST=db
#       - POSTGRES_PORT=5432
#       - DJANGO_SETTINGS_MODULE=src.settings
#       - PYTHONPATH=/app/src
#     depends_on:
#       - db
#     networks:
#       - transcendence_app

# networks:
#   transcendence_app:
#     driver: bridge

# volumes:
#   postgres_data:
version: '3'

services:
  db:
    image: postgres:latest
    env_file: .docker-env
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432

    networks:
      - barev

    restart: always
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"

    networks:
      - barev
    depends_on:
      - db
    env_file:
      - .env
    restart: always

volumes:
  postgres:

networks:
  barev:
    driver: bridge

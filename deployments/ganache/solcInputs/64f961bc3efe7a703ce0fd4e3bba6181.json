{
  "language": "Solidity",
  "sources": {
    "contracts/Tournament.sol": {
      "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.24;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract Tournament {\n    // uint256 public unlockTime;\n    // address payable public owner;\n\n\n\n\n\tmapping (string => string) names;\n\n    constructor(uint256 _unlockTime) payable {\n        // if (block.timestamp >= _unlockTime) {\n        //     revert InvalidUnlockTime(_unlockTime);\n        // }\n\n        // unlockTime = _unlockTime;\n        // owner = payable(msg.sender);\n    }\n\n\tfunction setName(string memory _name, string memory _value) public {\n\t\tnames[_name] = _value;\n\t}\n\n\tfunction getName(string memory _name) public view returns (string memory) {\n\t\treturn names[_name];\n\t}\n}\n"
    }
  },
  "settings": {
    "metadata": {
      "bytecodeHash": "none",
      "useLiteralContent": true
    },
    "optimizer": {
      "enabled": true,
      "runs": 800
    },
    "evmVersion": "paris",
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    }
  }
}